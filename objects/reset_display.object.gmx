<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(reset_display)if(id!=other.id)instance_destroy();//remove previous reset_displays
alarm[1]=20;//start after 20 frames
nw=0;//set custom width or else take window's
nh=0;//set custom height or else take window's
mode=0;//mode = 1 result in room resize
aa=0;//antialiasing level 0, 2, 4, 8
xv=0;//x start position of default view
yv=0;//y start position of default view
wv=room_width;//total width of default view
hv=room_height;//total height of default view
vsync=false;//VSync bool
autosize=0;//autosize = 1 result in POST-room size for the default view
//variable initialisation
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(nw==0)nw=window_get_width();
if(nh==0)nh=window_get_height();
if(mode==1)
{
room_width=nw;
room_height=nh;
}
if(!application_surface_is_enabled())application_surface_enable(true);
view_visible[0]=1;
view_enabled=1;
view_surface_id[0]=application_surface;
if(surface_exists(application_surface))surface_resize(application_surface,nw,nh);
display_set_gui_size(nw,nh);
window_set_size(nw,nh);
wpx=window_get_x();
wpy=window_get_y();
display_reset(aa,vsync);
view_xview[0]=xv;
view_yview[0]=yv;
view_wview[0]=wv;
view_hview[0]=hv;
if(autosize==1)
{
view_wview[0]=nw;
view_hview[0]=nh;
}
alarm[0]=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_surface_id[0]=application_surface;//reset surface
window_set_position(wpx,wpy);//reset window location
resize_code();//code to execute after display has reset
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_enable_alphablend(false);//efficiency+
draw_set_colour(c_white);
draw_rectangle(view_xview[0],view_yview[0],view_wview[0],view_hview[0],false);
draw_set_colour(c_black);
draw_enable_alphablend(true);
//draws white overlay on entire screen
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

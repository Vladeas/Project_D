<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wall_W=10;

idx=instance_create(0,0,Wall);
with (idx)
{
    x1=0;
    y1=0;
    x2= other.wall_W;
    y2=room_height;
    //phy_active = true;
    fix=physics_fixture_create();
    physics_fixture_set_polygon_shape(fix);
    physics_fixture_add_point(fix,x1,y1);
    physics_fixture_add_point(fix,x2,y1);
    physics_fixture_add_point(fix,x2,y2);
    physics_fixture_add_point(fix,x1,y2);
    physics_fixture_set_kinematic(fix);
    physics_fixture_set_density(fix,0);
    physics_fixture_set_friction(fix,0);
    physics_fixture_bind(fix,other.idx);
}


idx=instance_create(0,0,Wall);
with (idx)
{
    x1=room_width-other.wall_W;
    y1=0;
    x2=room_width;
    y2=room_height;
    //phy_active = true;
    fix=physics_fixture_create();
    physics_fixture_set_polygon_shape(fix);
    physics_fixture_add_point(fix,x1,y1);
    physics_fixture_add_point(fix,x2,y1);
    physics_fixture_add_point(fix,x2,y2);
    physics_fixture_add_point(fix,x1,y2);
    physics_fixture_set_kinematic(fix);
    physics_fixture_set_density(fix,0);
    physics_fixture_set_friction(fix,0);
    physics_fixture_bind(fix,other.idx);
}

idx=instance_create(0,0,Wall);
with (idx)
{
    x1=other.wall_W;
    y1=0;
    x2=room_width-other.wall_W;
    y2=other.wall_W;
    //phy_active = true;
    fix=physics_fixture_create();
    physics_fixture_set_polygon_shape(fix);
    physics_fixture_add_point(fix,x1,y1);
    physics_fixture_add_point(fix,x2,y1);
    physics_fixture_add_point(fix,x2,y2);
    physics_fixture_add_point(fix,x1,y2);
    physics_fixture_set_kinematic(fix);
    physics_fixture_set_density(fix,0);
    physics_fixture_set_friction(fix,0);
    physics_fixture_bind(fix,other.idx);
}

idx=instance_create(0,0,Wall);
with (idx)
{
    x1=other.wall_W;
    y1=room_height-other.wall_W;
    x2=room_width-other.wall_W;
    y2=room_height;
    //phy_active = true;
    fix=physics_fixture_create();
    physics_fixture_set_polygon_shape(fix);
    physics_fixture_add_point(fix,x1,y1);
    physics_fixture_add_point(fix,x2,y1);
    physics_fixture_add_point(fix,x2,y2);
    physics_fixture_add_point(fix,x1,y2);
    physics_fixture_set_kinematic(fix);
    physics_fixture_set_density(fix,0);
    physics_fixture_set_friction(fix,0);
    physics_fixture_bind(fix,other.idx);
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
